{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///medium-editor-insert.min.js","webpack:///webpack/bootstrap 971a0e149cd7c6b0e4f6","webpack:///./src/js/Plugin.js","webpack:///./src/js/utils.js","webpack:///./src/js/Core.js","webpack:///./src/js/addons/Embeds.js","webpack:///./src/js/addons/Images.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_Core","_Core2","MediumEditorInsert","MediumEditor","Extension","extend","name","addons","images","embeds","init","prototype","apply","arguments","core","destroy","removeButtons","ucfirst","str","charAt","toUpperCase","slice","generateRandomString","length","undefined","Math","random","toString","substr","getClosestWithClassName","el","className","util","traverseUp","element","classList","contains","isChildOf","parent","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","_utils","_utils2","_Images","_Images2","_Embeds","_Embeds2","Core","plugin","_plugin","_editor","base","initAddons","addButtons","events","_this","addonActions","on","document","toggleButtons","bind","buttons","getElementsByClassName","toggleAddons","Array","forEach","action","handleAddonClick","window","positionButtons","_this2","initializedAddons","keys","addonOptions","console","error","_this3","html","createElement","getEditorId","add","setAttribute","addon","label","innerHTML","body","appendChild","remove","elPosition","addonButton","addonsStyle","addonButtonStyle","position","getSelectedParentElement","getBoundingClientRect","getComputedStyle","top","scrollY","left","scrollX","parseInt","marginLeft","style","shouldDisplayButtonsOnElement","selectElement","showButtons","deselectElement","hideButtons","_this4","addonClassNames","isAddon","belongsToEditor","innerText","trim","getEditorElements","editor","addonName","elementClassName","push","selectedElement","toggle","e","currentTarget","getAttribute","preventDefault","handleClick","Embeds","options","assign","log","Images","preview","uploadUrl","unselectImage","selectImage","_input","type","multiple","uploadFiles","click","paragraph","nodeName","toLowerCase","div","parentNode","insertBefore","files","file","uid","upload","reader","FileReader","onload","insertImage","result","readAsDataURL","xhr","XMLHttpRequest","data","FormData","open","onreadystatechange","readyState","status","image","querySelector","replaceImage","responseText","append","send","url","figure","img","domImage","Image","alt","match","src","removeAttribute","clickedImage"],"mappings":"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","file":"medium-editor-insert.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MediumEditorInsert\"] = factory();\n\telse\n\t\troot[\"MediumEditorInsert\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MediumEditorInsert\"] = factory();\n\telse\n\t\troot[\"MediumEditorInsert\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _Core = __webpack_require__(2);\n\t\n\tvar _Core2 = _interopRequireDefault(_Core);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar MediumEditorInsert = MediumEditor.Extension.extend({\n\t    name: 'insert',\n\t\n\t    addons: {\n\t        images: true,\n\t        embeds: true\n\t    },\n\t\n\t    init: function init() {\n\t        MediumEditor.Extension.prototype.init.apply(this, arguments);\n\t\n\t        this.core = new _Core2.default(this);\n\t    },\n\t\n\t    destroy: function destroy() {\n\t        this.core.removeButtons();\n\t    }\n\t});\n\t\n\texports.default = MediumEditorInsert;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = {\n\t    ucfirst: function ucfirst(str) {\n\t        return str.charAt(0).toUpperCase() + str.slice(1);\n\t    },\n\t\n\t    generateRandomString: function generateRandomString() {\n\t        var length = arguments.length <= 0 || arguments[0] === undefined ? 15 : arguments[0];\n\t\n\t        return Math.random().toString(36).substr(2, length);\n\t    },\n\t\n\t    getClosestWithClassName: function getClosestWithClassName(el, className) {\n\t        return MediumEditor.util.traverseUp(el, function (element) {\n\t            return element.classList.contains(className);\n\t        });\n\t    },\n\t\n\t    isChildOf: function isChildOf(el, parent) {\n\t        return MediumEditor.util.traverseUp(el, function (element) {\n\t            return element === parent;\n\t        }) ? true : false;\n\t    }\n\t};\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _utils = __webpack_require__(1);\n\t\n\tvar _utils2 = _interopRequireDefault(_utils);\n\t\n\tvar _Images = __webpack_require__(4);\n\t\n\tvar _Images2 = _interopRequireDefault(_Images);\n\t\n\tvar _Embeds = __webpack_require__(3);\n\t\n\tvar _Embeds2 = _interopRequireDefault(_Embeds);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Core = function () {\n\t    function Core(plugin) {\n\t        _classCallCheck(this, Core);\n\t\n\t        this._plugin = plugin;\n\t        this._editor = this._plugin.base;\n\t\n\t        this.initAddons();\n\t        this.addButtons();\n\t        this.events();\n\t    }\n\t\n\t    _createClass(Core, [{\n\t        key: 'events',\n\t        value: function events() {\n\t            var _this = this;\n\t\n\t            var addonActions = void 0;\n\t\n\t            // This could be chained when medium-editor 5.15.2 is released\n\t            // https://github.com/yabwe/medium-editor/pull/1046\n\t            this._plugin.on(document, 'click', this.toggleButtons.bind(this));\n\t            this._plugin.on(document, 'keyup', this.toggleButtons.bind(this));\n\t            this._plugin.on(this.buttons.getElementsByClassName('medium-editor-insert-buttons-show')[0], 'click', this.toggleAddons.bind(this));\n\t\n\t            // This could be written in one statement when medium-editor 5.15.2 is released\n\t            // https://github.com/yabwe/medium-editor/pull/1046\n\t            addonActions = this.buttons.getElementsByClassName('medium-editor-insert-action');\n\t            Array.prototype.forEach.call(addonActions, function (action) {\n\t                _this._plugin.on(action, 'click', _this.handleAddonClick.bind(_this));\n\t            });\n\t\n\t            this._plugin.on(window, 'resize', this.positionButtons.bind(this));\n\t        }\n\t    }, {\n\t        key: 'initAddons',\n\t        value: function initAddons() {\n\t            var _this2 = this;\n\t\n\t            // Initialiez all default addons, we'll delete ones we don't need later\n\t            this._plugin.initializedAddons = {\n\t                images: new _Images2.default(this._plugin, this._plugin.addons.images),\n\t                embeds: new _Embeds2.default(this._plugin, this._plugin.addons.embeds)\n\t            };\n\t\n\t            Object.keys(this._plugin.addons).forEach(function (name) {\n\t                var addonOptions = _this2._plugin.addons[name];\n\t\n\t                // If the addon is custom one\n\t                if (!_this2._plugin.initializedAddons[name]) {\n\t                    if (typeof addonOptions === 'function') {\n\t                        _this2._plugin.initializedAddons[name] = new addonOptions(_this2._plugin);\n\t                    } else {\n\t                        window.console.error('I don\\'t know how to initialize custom \"' + name + '\" addon!');\n\t                    }\n\t                }\n\t\n\t                // Delete disabled addon\n\t                if (!addonOptions) {\n\t                    delete _this2._plugin.initializedAddons[name];\n\t                }\n\t            });\n\t        }\n\t    }, {\n\t        key: 'addButtons',\n\t        value: function addButtons() {\n\t            var _this3 = this;\n\t\n\t            var html = void 0;\n\t\n\t            this.buttons = document.createElement('div');\n\t            this.buttons.id = 'medium-editor-insert-' + this._plugin.getEditorId();\n\t            this.buttons.classList.add('medium-editor-insert-buttons');\n\t            this.buttons.setAttribute('contentediable', false);\n\t\n\t            html = '<a class=\"medium-editor-insert-buttons-show\">+</a>\\n            <ul class=\"medium-editor-insert-buttons-addons\">';\n\t\n\t            Object.keys(this._plugin.initializedAddons).forEach(function (name) {\n\t                var addon = _this3._plugin.initializedAddons[name];\n\t\n\t                html += '<li><a class=\"medium-editor-insert-action\" data-addon=\"' + name + '\">' + addon.label + '</a></li>';\n\t            });\n\t\n\t            html += '</ul>';\n\t\n\t            this.buttons.innerHTML = html;\n\t\n\t            document.body.appendChild(this.buttons);\n\t        }\n\t    }, {\n\t        key: 'removeButtons',\n\t        value: function removeButtons() {\n\t            this.buttons.remove();\n\t        }\n\t    }, {\n\t        key: 'positionButtons',\n\t        value: function positionButtons() {\n\t            var el = void 0,\n\t                elPosition = void 0,\n\t                addons = void 0,\n\t                addonButton = void 0,\n\t                addonsStyle = void 0,\n\t                addonButtonStyle = void 0,\n\t                position = void 0;\n\t\n\t            // Don't position buttons if they aren't active\n\t            if (this.buttons.classList.contains('medium-editor-insert-buttons-active') === false) {\n\t                return;\n\t            }\n\t\n\t            el = this._editor.getSelectedParentElement();\n\t            elPosition = el.getBoundingClientRect();\n\t            addons = this.buttons.getElementsByClassName('medium-editor-insert-buttons-addons')[0];\n\t            addonButton = this.buttons.getElementsByClassName('medium-editor-insert-action')[0];\n\t            addonsStyle = window.getComputedStyle(addons);\n\t            addonButtonStyle = window.getComputedStyle(addonButton);\n\t\n\t            // Calculate position\n\t            position = {\n\t                top: window.scrollY + elPosition.top,\n\t                left: window.scrollX + elPosition.left - parseInt(addonsStyle.left, 10) - parseInt(addonButtonStyle.marginLeft, 10)\n\t            };\n\t\n\t            // If left position is lower than 0, the buttons would be out of the viewport.\n\t            // In that case, align buttons with the editor\n\t            position.left = position.left < 0 ? elPosition.left : position.left;\n\t\n\t            this.buttons.style.left = position.left + 'px';\n\t            this.buttons.style.top = position.top + 'px';\n\t        }\n\t    }, {\n\t        key: 'toggleButtons',\n\t        value: function toggleButtons() {\n\t            var el = this._editor.getSelectedParentElement();\n\t\n\t            if (this.shouldDisplayButtonsOnElement(el)) {\n\t                this.selectElement(el);\n\t                this.showButtons();\n\t            } else {\n\t                this.deselectElement();\n\t                this.hideButtons();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'shouldDisplayButtonsOnElement',\n\t        value: function shouldDisplayButtonsOnElement(el) {\n\t            var _this4 = this;\n\t\n\t            var addonClassNames = [];\n\t            var isAddon = false,\n\t                belongsToEditor = false;\n\t\n\t            // Don't show buttons when the element has text\n\t            if (el.innerText.trim() !== '') {\n\t                return false;\n\t            }\n\t\n\t            // Don't show buttons when the editor doesn't belong to editor\n\t            this._plugin.getEditorElements().forEach(function (editor) {\n\t                if (_utils2.default.isChildOf(el, editor)) {\n\t                    belongsToEditor = true;\n\t                    return;\n\t                }\n\t            });\n\t\n\t            if (!belongsToEditor) {\n\t                return false;\n\t            }\n\t\n\t            // Get class names used by addons\n\t            Object.keys(this._plugin.initializedAddons).forEach(function (addonName) {\n\t                var addon = _this4._plugin.initializedAddons[addonName];\n\t                if (addon.elementClassName) {\n\t                    addonClassNames.push(addon.elementClassName);\n\t                }\n\t            });\n\t\n\t            // Don't show buttons if the element is an addon element\n\t            // - when the element has an addon class, or some of its parents have it\n\t            addonClassNames.forEach(function (className) {\n\t                if (el.classList.contains(className) || _utils2.default.getClosestWithClassName(el, className)) {\n\t                    isAddon = true;\n\t                    return;\n\t                }\n\t            });\n\t\n\t            return !isAddon;\n\t        }\n\t    }, {\n\t        key: 'selectElement',\n\t        value: function selectElement(el) {\n\t            this.selectedElement = el;\n\t        }\n\t    }, {\n\t        key: 'deselectElement',\n\t        value: function deselectElement() {\n\t            this.selectedElement = null;\n\t        }\n\t    }, {\n\t        key: 'showButtons',\n\t        value: function showButtons() {\n\t            this.buttons.classList.add('medium-editor-insert-buttons-active');\n\t            this.positionButtons();\n\t        }\n\t    }, {\n\t        key: 'hideButtons',\n\t        value: function hideButtons() {\n\t            this.buttons.classList.remove('medium-editor-insert-buttons-active');\n\t            this.buttons.classList.remove('medium-editor-insert-addons-active');\n\t        }\n\t    }, {\n\t        key: 'toggleAddons',\n\t        value: function toggleAddons() {\n\t            this.buttons.classList.toggle('medium-editor-insert-addons-active');\n\t        }\n\t    }, {\n\t        key: 'handleAddonClick',\n\t        value: function handleAddonClick(e) {\n\t            var name = e.currentTarget.getAttribute('data-addon');\n\t\n\t            e.preventDefault();\n\t\n\t            this._plugin.initializedAddons[name].handleClick(e);\n\t        }\n\t    }]);\n\t\n\t    return Core;\n\t}();\n\n\texports.default = Core;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Embeds = function () {\n\t\tfunction Embeds(plugin, options) {\n\t\t\t_classCallCheck(this, Embeds);\n\t\n\t\t\tthis._plugin = plugin;\n\t\t\tthis._editor = this._plugin.base;\n\t\n\t\t\tthis.options = {\n\t\t\t\tlabel: '<span class=\"fa fa-youtube-play\"></span>'\n\t\t\t};\n\t\n\t\t\tObject.assign(this.options, options);\n\t\n\t\t\tthis.label = this.options.label;\n\t\t}\n\t\n\t\t_createClass(Embeds, [{\n\t\t\tkey: 'handleClick',\n\t\t\tvalue: function handleClick() {\n\t\t\t\twindow.console.log('embeds clicked');\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn Embeds;\n\t}();\n\n\texports.default = Embeds;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _utils = __webpack_require__(1);\n\t\n\tvar _utils2 = _interopRequireDefault(_utils);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Images = function () {\n\t    function Images(plugin, options) {\n\t        _classCallCheck(this, Images);\n\t\n\t        this.options = {\n\t            label: '<span class=\"fa fa-camera\"></span>',\n\t            preview: true,\n\t            uploadUrl: 'upload.php'\n\t        };\n\t\n\t        Object.assign(this.options, options);\n\t\n\t        this._plugin = plugin;\n\t        this._editor = this._plugin.base;\n\t        this.elementClassName = 'medium-editor-insert-images';\n\t        this.label = this.options.label;\n\t\n\t        this.events();\n\t    }\n\t\n\t    _createClass(Images, [{\n\t        key: 'events',\n\t        value: function events() {\n\t            var _this = this;\n\t\n\t            this._plugin.on(document, 'click', this.unselectImage.bind(this));\n\t\n\t            this._plugin.getEditorElements().forEach(function (editor) {\n\t                _this._plugin.on(editor, 'click', _this.selectImage.bind(_this));\n\t            });\n\t        }\n\t    }, {\n\t        key: 'handleClick',\n\t        value: function handleClick() {\n\t            this._input = document.createElement('input');\n\t            this._input.type = 'file';\n\t            this._input.multiple = true;\n\t\n\t            this._plugin.on(this._input, 'change', this.uploadFiles.bind(this));\n\t\n\t            this._input.click();\n\t        }\n\t    }, {\n\t        key: 'uploadFiles',\n\t        value: function uploadFiles() {\n\t            var _this2 = this;\n\t\n\t            var paragraph = this._plugin.core.selectedElement;\n\t\n\t            // Replace paragraph with div, because figure is a block element\n\t            // and can't be nested inside paragraphs\n\t            if (paragraph.nodeName.toLowerCase() === 'p') {\n\t                var div = document.createElement('div');\n\t\n\t                paragraph.parentNode.insertBefore(div, paragraph);\n\t                this._plugin.core.selectElement(div);\n\t                paragraph.remove();\n\t            }\n\t\n\t            Array.prototype.forEach.call(this._input.files, function (file) {\n\t                // Generate uid for this image, so we can identify it later\n\t                // and we can replace preview image with uploaded one\n\t                var uid = _utils2.default.generateRandomString();\n\t\n\t                if (_this2.options.preview) {\n\t                    _this2.preview(file, uid);\n\t                }\n\t\n\t                _this2.upload(file, uid);\n\t            });\n\t\n\t            this._plugin.core.hideButtons();\n\t        }\n\t    }, {\n\t        key: 'preview',\n\t        value: function preview(file, uid) {\n\t            var _this3 = this;\n\t\n\t            var reader = new FileReader();\n\t\n\t            reader.onload = function (e) {\n\t                _this3.insertImage(e.target.result, uid);\n\t            };\n\t\n\t            reader.readAsDataURL(file);\n\t        }\n\t    }, {\n\t        key: 'upload',\n\t        value: function upload(file, uid) {\n\t            var _this4 = this;\n\t\n\t            var xhr = new XMLHttpRequest(),\n\t                data = new FormData();\n\t\n\t            xhr.open(\"POST\", this.options.uploadUrl, true);\n\t            xhr.onreadystatechange = function () {\n\t                if (xhr.readyState === 4 && xhr.status === 200) {\n\t                    var image = _this4._plugin.core.selectedElement.querySelector('[data-uid=\"' + uid + '\"]');\n\t\n\t                    if (image) {\n\t                        _this4.replaceImage(image, xhr.responseText);\n\t                    } else {\n\t                        _this4.insertImage(xhr.responseText);\n\t                    }\n\t                }\n\t            };\n\t\n\t            data.append(\"file\", file);\n\t            xhr.send(data);\n\t        }\n\t    }, {\n\t        key: 'insertImage',\n\t        value: function insertImage(url, uid) {\n\t            var el = this._plugin.core.selectedElement,\n\t                figure = document.createElement('figure'),\n\t                img = document.createElement('img'),\n\t                domImage = new Image();\n\t\n\t            img.alt = '';\n\t\n\t            if (uid) {\n\t                img.setAttribute('data-uid', uid);\n\t            }\n\t\n\t            // If we're dealing with a preview image,\n\t            // we don't have to preload it befor displaying\n\t            if (url.match(/^data:/)) {\n\t                img.src = url;\n\t                figure.appendChild(img);\n\t                el.appendChild(figure);\n\t            } else {\n\t                domImage.onload = function () {\n\t                    img.src = domImage.src;\n\t                    figure.appendChild(img);\n\t                    el.appendChild(figure);\n\t                };\n\t                domImage.src = url;\n\t            }\n\t\n\t            el.classList.add(this.elementClassName);\n\t\n\t            // Return domImage so we can test this function easily\n\t            return domImage;\n\t        }\n\t    }, {\n\t        key: 'replaceImage',\n\t        value: function replaceImage(image, url) {\n\t            var domImage = new Image();\n\t\n\t            domImage.onload = function () {\n\t                image.src = domImage.src;\n\t                image.removeAttribute('data-uid');\n\t            };\n\t\n\t            domImage.src = url;\n\t\n\t            // Return domImage so we can test this function easily\n\t            return domImage;\n\t        }\n\t    }, {\n\t        key: 'selectImage',\n\t        value: function selectImage(e) {\n\t            var el = e.target;\n\t\n\t            if (el.nodeName.toLowerCase() === 'img' && _utils2.default.getClosestWithClassName(el, this.elementClassName)) {\n\t                el.classList.add('medium-editor-insert-image-active');\n\t            }\n\t        }\n\t    }, {\n\t        key: 'unselectImage',\n\t        value: function unselectImage(e) {\n\t            var el = e.target;\n\t            var clickedImage = void 0;\n\t\n\t            // Unselect all selected images. If an image is clicked, unselect all except this one.\n\t            if (el.nodeName.toLowerCase() === 'img' && el.classList.contains('medium-editor-insert-image-active')) {\n\t                clickedImage = el;\n\t            }\n\t\n\t            this._plugin.getEditorElements().forEach(function (editor) {\n\t                var images = editor.getElementsByClassName('medium-editor-insert-image-active');\n\t\n\t                Array.prototype.forEach.call(images, function (image) {\n\t                    if (image !== clickedImage) {\n\t                        image.classList.remove('medium-editor-insert-image-active');\n\t                    }\n\t                });\n\t            });\n\t        }\n\t    }]);\n\t\n\t    return Images;\n\t}();\n\n\texports.default = Images;\n\tmodule.exports = exports['default'];\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** medium-editor-insert.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 971a0e149cd7c6b0e4f6\n **/","import Core from './Core';\n\nconst MediumEditorInsert = MediumEditor.Extension.extend({\n    name: 'insert',\n\n    addons: {\n        images: true,\n        embeds: true\n    },\n\n    init: function() {\n        MediumEditor.Extension.prototype.init.apply(this, arguments);\n\n        this.core = new Core(this);\n    },\n\n    destroy: function() {\n        this.core.removeButtons();\n    }\n});\n\nexport default MediumEditorInsert;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/js/Plugin.js\n **/","export default {\n    ucfirst: (str) => {\n        return str.charAt(0).toUpperCase() + str.slice(1);\n    },\n\n    generateRandomString: (length = 15) => {\n        return Math.random().toString(36).substr(2, length);\n    },\n\n    getClosestWithClassName: (el, className) => {\n        return MediumEditor.util.traverseUp(el, (element) => {\n            return element.classList.contains(className);\n        });\n    },\n\n    isChildOf: (el, parent) => {\n        return MediumEditor.util.traverseUp(el, (element) => {\n            return element === parent;\n        }) ? true : false;\n    }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/js/utils.js\n **/","import utils from './utils';\nimport Images from './addons/Images';\nimport Embeds from './addons/Embeds';\n\nexport default class Core {\n\n    constructor(plugin) {\n        this._plugin = plugin;\n        this._editor = this._plugin.base;\n\n        this.initAddons();\n        this.addButtons();\n        this.events();\n    }\n\n    events() {\n        let addonActions;\n\n        // This could be chained when medium-editor 5.15.2 is released\n        // https://github.com/yabwe/medium-editor/pull/1046\n        this._plugin.on(document, 'click', this.toggleButtons.bind(this));\n        this._plugin.on(document, 'keyup', this.toggleButtons.bind(this));\n        this._plugin.on(this.buttons.getElementsByClassName('medium-editor-insert-buttons-show')[0], 'click', this.toggleAddons.bind(this));\n\n        // This could be written in one statement when medium-editor 5.15.2 is released\n        // https://github.com/yabwe/medium-editor/pull/1046\n        addonActions = this.buttons.getElementsByClassName('medium-editor-insert-action');\n        Array.prototype.forEach.call(addonActions, (action) => {\n            this._plugin.on(action, 'click', this.handleAddonClick.bind(this));\n        });\n\n        this._plugin.on(window, 'resize', this.positionButtons.bind(this));\n    }\n\n    initAddons() {\n        // Initialiez all default addons, we'll delete ones we don't need later\n        this._plugin.initializedAddons = {\n            images: new Images(this._plugin, this._plugin.addons.images),\n            embeds: new Embeds(this._plugin, this._plugin.addons.embeds)\n        };\n\n        Object.keys(this._plugin.addons).forEach((name) => {\n            const addonOptions = this._plugin.addons[name];\n\n            // If the addon is custom one\n            if (!this._plugin.initializedAddons[name]) {\n                if (typeof addonOptions === 'function') {\n                    this._plugin.initializedAddons[name] = new addonOptions(this._plugin);\n                } else {\n                    window.console.error(`I don't know how to initialize custom \"${name}\" addon!`);\n                }\n            }\n\n            // Delete disabled addon\n            if (!addonOptions) {\n                delete this._plugin.initializedAddons[name];\n            }\n        });\n    }\n\n    addButtons() {\n        let html;\n\n        this.buttons = document.createElement('div');\n        this.buttons.id = `medium-editor-insert-${this._plugin.getEditorId()}`;\n        this.buttons.classList.add('medium-editor-insert-buttons');\n        this.buttons.setAttribute('contentediable', false);\n\n        html = `<a class=\"medium-editor-insert-buttons-show\">+</a>\n            <ul class=\"medium-editor-insert-buttons-addons\">`;\n\n        Object.keys(this._plugin.initializedAddons).forEach((name) => {\n            const addon = this._plugin.initializedAddons[name];\n\n            html += `<li><a class=\"medium-editor-insert-action\" data-addon=\"${name}\">${addon.label}</a></li>`;\n        });\n\n        html += `</ul>`;\n\n        this.buttons.innerHTML = html;\n\n        document.body.appendChild(this.buttons);\n    }\n\n    removeButtons() {\n        this.buttons.remove();\n    }\n\n    positionButtons() {\n        let el, elPosition, addons, addonButton, addonsStyle, addonButtonStyle, position;\n\n        // Don't position buttons if they aren't active\n        if (this.buttons.classList.contains('medium-editor-insert-buttons-active') === false) {\n            return;\n        }\n\n        el = this._editor.getSelectedParentElement();\n        elPosition = el.getBoundingClientRect();\n        addons = this.buttons.getElementsByClassName('medium-editor-insert-buttons-addons')[0];\n        addonButton = this.buttons.getElementsByClassName('medium-editor-insert-action')[0];\n        addonsStyle = window.getComputedStyle(addons);\n        addonButtonStyle = window.getComputedStyle(addonButton);\n\n        // Calculate position\n        position = {\n            top: window.scrollY + elPosition.top,\n            left: window.scrollX + elPosition.left - parseInt(addonsStyle.left, 10) - parseInt(addonButtonStyle.marginLeft, 10)\n        };\n\n        // If left position is lower than 0, the buttons would be out of the viewport.\n        // In that case, align buttons with the editor\n        position.left = position.left < 0 ? elPosition.left : position.left;\n\n        this.buttons.style.left = `${position.left}px`;\n        this.buttons.style.top = `${position.top}px`;\n    }\n\n    toggleButtons() {\n        const el = this._editor.getSelectedParentElement();\n\n        if (this.shouldDisplayButtonsOnElement(el)) {\n            this.selectElement(el);\n            this.showButtons();\n        } else {\n            this.deselectElement();\n            this.hideButtons();\n        }\n    }\n\n    shouldDisplayButtonsOnElement(el) {\n        const addonClassNames = [];\n        let isAddon = false,\n            belongsToEditor = false;\n\n        // Don't show buttons when the element has text\n        if (el.innerText.trim() !== '') {\n            return false;\n        }\n\n        // Don't show buttons when the editor doesn't belong to editor\n        this._plugin.getEditorElements().forEach((editor) => {\n            if (utils.isChildOf(el, editor)) {\n                belongsToEditor = true;\n                return;\n            }\n        });\n\n        if (!belongsToEditor) {\n            return false;\n        }\n\n        // Get class names used by addons\n        Object.keys(this._plugin.initializedAddons).forEach((addonName) => {\n            const addon = this._plugin.initializedAddons[addonName];\n            if (addon.elementClassName) {\n                addonClassNames.push(addon.elementClassName);\n            }\n        });\n\n        // Don't show buttons if the element is an addon element\n        // - when the element has an addon class, or some of its parents have it\n        addonClassNames.forEach((className) => {\n            if (el.classList.contains(className) || utils.getClosestWithClassName(el, className)) {\n                isAddon = true;\n                return;\n            }\n        });\n\n        return !isAddon;\n    }\n\n    selectElement(el) {\n        this.selectedElement = el;\n    }\n\n    deselectElement() {\n        this.selectedElement = null;\n    }\n\n    showButtons() {\n        this.buttons.classList.add('medium-editor-insert-buttons-active');\n        this.positionButtons();\n    }\n\n    hideButtons() {\n        this.buttons.classList.remove('medium-editor-insert-buttons-active');\n        this.buttons.classList.remove('medium-editor-insert-addons-active');\n    }\n\n    toggleAddons() {\n        this.buttons.classList.toggle('medium-editor-insert-addons-active');\n    }\n\n    handleAddonClick(e) {\n        const name = e.currentTarget.getAttribute('data-addon');\n\n        e.preventDefault();\n\n        this._plugin.initializedAddons[name].handleClick(e);\n    }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/js/Core.js\n **/","export default class Embeds {\n\n\tconstructor(plugin, options) {\n\t\tthis._plugin = plugin;\n        this._editor = this._plugin.base;\n\n\t\tthis.options = {\n\t\t\tlabel: '<span class=\"fa fa-youtube-play\"></span>'\n\t\t};\n\n\t\tObject.assign(this.options, options);\n\n\t\tthis.label = this.options.label;\n\t}\n\n\thandleClick() {\n\t\twindow.console.log('embeds clicked');\n\t}\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/js/addons/Embeds.js\n **/","import utils from '../utils';\n\nexport default class Images {\n\n\tconstructor(plugin, options) {\n\t\tthis.options = {\n\t\t\tlabel: '<span class=\"fa fa-camera\"></span>',\n\t\t\tpreview: true,\n\t\t\tuploadUrl: 'upload.php'\n\t\t};\n\n\t\tObject.assign(this.options, options);\n\n        this._plugin = plugin;\n        this._editor = this._plugin.base;\n        this.elementClassName = 'medium-editor-insert-images';\n\t\tthis.label = this.options.label;\n\n        this.events();\n\t}\n\n    events() {\n        this._plugin.on(document, 'click', this.unselectImage.bind(this));\n\n        this._plugin.getEditorElements().forEach((editor) => {\n            this._plugin.on(editor, 'click', this.selectImage.bind(this));\n        });\n    }\n\n\thandleClick() {\n\t\tthis._input = document.createElement('input');\n\t\tthis._input.type = 'file';\n\t\tthis._input.multiple = true;\n\n\t\tthis._plugin.on(this._input, 'change', this.uploadFiles.bind(this));\n\n\t\tthis._input.click();\n\t}\n\n\tuploadFiles() {\n\t\tconst paragraph = this._plugin.core.selectedElement;\n\n        // Replace paragraph with div, because figure is a block element\n        // and can't be nested inside paragraphs\n\t\tif (paragraph.nodeName.toLowerCase() === 'p') {\n\t\t\tconst div = document.createElement('div');\n\n\t\t\tparagraph.parentNode.insertBefore(div, paragraph);\n\t\t\tthis._plugin.core.selectElement(div);\n\t\t\tparagraph.remove();\n\t\t}\n\n\t\tArray.prototype.forEach.call(this._input.files, (file) => {\n            // Generate uid for this image, so we can identify it later\n            // and we can replace preview image with uploaded one\n\t\t\tconst uid = utils.generateRandomString();\n\n\t\t\tif (this.options.preview) {\n\t\t\t\tthis.preview(file, uid);\n\t\t\t}\n\n\t\t\tthis.upload(file, uid);\n\t\t});\n\n\t\tthis._plugin.core.hideButtons();\n\t}\n\n\tpreview(file, uid) {\n\t\tconst reader = new FileReader();\n\n\t\treader.onload = (e) => {\n\t\t\tthis.insertImage(e.target.result, uid);\n\t\t};\n\n\t\treader.readAsDataURL(file);\n\t}\n\n\tupload(file, uid) {\n\t\tconst xhr = new XMLHttpRequest(),\n\t\t\tdata = new FormData();\n\n\t\txhr.open(\"POST\", this.options.uploadUrl, true);\n\t\txhr.onreadystatechange = () => {\n            if (xhr.readyState === 4 && xhr.status === 200) {\n                const image = this._plugin.core.selectedElement.querySelector(`[data-uid=\"${uid}\"]`);\n\n                if (image) {\n                    this.replaceImage(image, xhr.responseText);\n                } else {\n                    this.insertImage(xhr.responseText);\n                }\n            }\n\t\t};\n\n\t\tdata.append(\"file\", file);\n\t\txhr.send(data);\n\t}\n\n    insertImage(url, uid) {\n        const el = this._plugin.core.selectedElement,\n            figure = document.createElement('figure'),\n            img = document.createElement('img'),\n            domImage = new Image();\n\n        img.alt = '';\n\n        if (uid) {\n            img.setAttribute('data-uid', uid);\n        }\n\n        // If we're dealing with a preview image,\n        // we don't have to preload it befor displaying\n        if (url.match(/^data:/)) {\n            img.src = url;\n            figure.appendChild(img);\n            el.appendChild(figure);\n        } else {\n            domImage.onload = () => {\n                img.src = domImage.src;\n                figure.appendChild(img);\n                el.appendChild(figure);\n            };\n            domImage.src = url;\n        }\n\n        el.classList.add(this.elementClassName);\n\n        // Return domImage so we can test this function easily\n        return domImage;\n    }\n\n    replaceImage(image, url) {\n        const domImage = new Image();\n\n        domImage.onload = () => {\n            image.src = domImage.src;\n            image.removeAttribute('data-uid');\n        };\n\n        domImage.src = url;\n\n        // Return domImage so we can test this function easily\n        return domImage;\n    }\n\n    selectImage(e) {\n        const el = e.target;\n\n        if (el.nodeName.toLowerCase() === 'img' && utils.getClosestWithClassName(el, this.elementClassName)) {\n            el.classList.add('medium-editor-insert-image-active');\n        }\n    }\n\n    unselectImage(e) {\n        const el = e.target;\n        let clickedImage;\n\n        // Unselect all selected images. If an image is clicked, unselect all except this one.\n        if (el.nodeName.toLowerCase() === 'img' && el.classList.contains('medium-editor-insert-image-active')) {\n            clickedImage = el;\n        }\n\n        this._plugin.getEditorElements().forEach((editor) => {\n            const images = editor.getElementsByClassName('medium-editor-insert-image-active');\n\n            Array.prototype.forEach.call(images, (image) => {\n                if (image !== clickedImage) {\n                    image.classList.remove('medium-editor-insert-image-active');\n                }\n            });\n        });\n    }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/js/addons/Images.js\n **/"],"sourceRoot":""}